language: cpp
dist: xenial

common-sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-xenial-6.0

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *all_sources
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *all_sources
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"        

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['clang-6.0', 'libstdc++-8-dev']
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['clang-5.0', 'libstdc++-8-dev']
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: windows
      name: "Windows Visual Studio 15 2017"
      script:
        - cmake --version
        - mkdir build && cd build && cmake .. -G "Visual Studio 15 2017" -A x64
        - cmake --build . --config Debug
        - ctest -C Debug

    - os: osx
      osx_image: xcode10.2
      compiler: clang

    - os: linux
      name: installation testing
      compiler: gcc
      addons:
        apt:
          sources: *all_sources
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      script: 
        - cmake --version
        - mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX:PATH=${HOME}/local-install
        - cmake --build . --config Release --target install -- -j $(nproc)
        - cd ../example
        - mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX:PATH=${HOME}/local-install
        - cmake --build .
        
             

before_install:
  - eval "${MATRIX_EVAL}"

script: 
  - cmake --version
  - mkdir build && cd build && cmake .. 
  - cmake --build . --config Debug -- -j $(nproc)
  - ctest -C Debug
