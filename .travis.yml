language: cpp
dist: xenial

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-6.0
    packages:
      - cmake
      - g++-7
      - g++-8
      - clang-5.0
      - clang-6.0
      - libstdc++-8-dev
      - shunit2
      - ninja-build
  homebrew:
    packages:
      - ninja
      - shunit2

os: linux
env:
  - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
  - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"      
  - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
  - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

matrix:
  include:
    - os: windows
      name: "Windows Visual Studio 15 2017"
      script:
        - cmake --version
        - mkdir build && cd build && cmake .. -G "Visual Studio 15 2017" -A x64
        - cmake --build . --config Debug
        - ctest -C Debug

    - os: osx
      osx_image: xcode10.2
      compiler: clang
      # empty matrix eval to avoid pollution
      env: 
        - MATRIX_EVAL=""

    - os: linux
      name: installation testing pure cmake
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      script: 
        - cmake --version
        - mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX:PATH=${HOME}/local-install -G Ninja
        - cmake --build . --config Release --target install
        - cd ../example
        - mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX:PATH=${HOME}/local-install
        - cmake --build .
        
    - os: linux
      name: installation testing cpack
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      script: 
        - mkdir build && cd build
        - cmake -DCPACK_PACKAGE_FILE_NAME=install-SI .. -G Ninja
        - cmake --build . --config Release --target package
        - mkdir ${HOME}/local-install
        - ./install-SI.sh --prefix=${HOME}/local-install --skip-license --exclude-subdir
        - cd ../example
        - mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX:PATH=${HOME}/local-install
        - cmake --build .
             

before_install:
  - eval "${MATRIX_EVAL}"

script: 
  - cmake --version
  - mkdir build && cd build && cmake .. -G Ninja 
  - cmake --build . --config Debug
  - ctest -C Debug
  - ../test/compilation-tests.sh
